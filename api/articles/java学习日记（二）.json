{"title":"java学习日记（二）","uid":"ac12acbbc0c5c288b187cdd139d1f144","slug":"java学习日记（二）","date":"2023-03-01T12:27:39.000Z","updated":"2023-03-16T11:07:48.000Z","comments":true,"path":"api/articles/java学习日记（二）.json","keywords":null,"cover":[],"content":"<h1 id=\"面向对象的编程思想\"><a href=\"#面向对象的编程思想\" class=\"headerlink\" title=\"面向对象的编程思想\"></a>面向对象的编程思想</h1><p>面向过程编程是数据结构和算法分开的，直接上手编算法解决问题。</p>\n<p>面向对象编程是先把问题抽象成对象，对象中有它的特点（数据结构）和解决方法（算法），数据结构和算法杂糅在一起处理。</p>\n<h1 id=\"类、继承\"><a href=\"#类、继承\" class=\"headerlink\" title=\"类、继承\"></a>类、继承</h1><p>java中的Object类：</p>\n<ul>\n<li>是最顶级的类，所有其他的类都是它直接或间接的子类。</li>\n<li>类型是Object的变量可以指向任意的对象</li>\n<li>Object提供了运行在JVM中的所有对象都需要的行为（方法）</li>\n</ul>\n<p>继承：</p>\n<ul>\n<li>通过继承可以重用父类中代码</li>\n<li>程序员可以定义含有一般行为的抽象类。抽象类的很多方法是没有实现细节的。可以在抽象类的基础上定义特定的子类，实现具体的细节。（java的接口中所有方法都没有实现细节，只是确定一些规范）</li>\n</ul>\n<h1 id=\"小例子\"><a href=\"#小例子\" class=\"headerlink\" title=\"小例子\"></a>小例子</h1><p>求长方形的周长和面积编程</p>\n<h2 id=\"创建一个新的类\"><a href=\"#创建一个新的类\" class=\"headerlink\" title=\"创建一个新的类\"></a>创建一个新的类</h2><p>首先在工程文件中的<strong>src（源码文件）</strong>中创建新的<strong>包（package）</strong>，在新的包中创建新的<strong>类（class）</strong>，在类里面编程</p>\n<h2 id=\"程序示例\"><a href=\"#程序示例\" class=\"headerlink\" title=\"程序示例\"></a>程序示例</h2><ol>\n<li>用面向过程的思想编程<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">chp2_oop</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//面对过程编程的长方形</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rectangle1</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">perimeter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> length<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">+</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> length<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> length <span class=\"token operator\">*</span> width<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"perimeter = \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Rectangle1</span><span class=\"token punctuation\">.</span><span class=\"token function\">perimeter</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"area = \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Rectangle1</span><span class=\"token punctuation\">.</span><span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>用面向对象的思想编程<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">chp2_oop</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//面对对象编程长方形</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rectangle2</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">perimeter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">+</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> l <span class=\"token operator\">*</span> w<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Rectangle2</span> rect1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rectangle2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">Rectangle2</span> rect2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rectangle2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\trect1<span class=\"token punctuation\">.</span>l <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t\trect1<span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"perimeter of rect1 = \"</span> <span class=\"token operator\">+</span> rect1<span class=\"token punctuation\">.</span><span class=\"token function\">perimeter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"area of rect1 = \"</span> <span class=\"token operator\">+</span> rect1<span class=\"token punctuation\">.</span><span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\trect2<span class=\"token punctuation\">.</span>l <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n\t\trect2<span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"perimeter of rect2 = \"</span> <span class=\"token operator\">+</span> rect2<span class=\"token punctuation\">.</span><span class=\"token function\">perimeter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"area of rect2 = \"</span> <span class=\"token operator\">+</span> rect2<span class=\"token punctuation\">.</span><span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h2 id=\"不同类中调用？\"><a href=\"#不同类中调用？\" class=\"headerlink\" title=\"不同类中调用？\"></a>不同类中调用？</h2><p>文件Rectangle.java中程序：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">chp2_oop</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Rectangle</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">float</span> l<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">perimeter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">+</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token keyword\">float</span> <span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> l <span class=\"token operator\">*</span> w<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 与类名相同，叫构造方法</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>l <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果不用同名，就不用加this。但是用this会比较清楚</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>文件TestRect.java中程序：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">chp2_oop</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestRect</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Rectangle</span> rect1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// new就是基于已有的对象构造的、定义的数据类型不能错</span>\n\t\t<span class=\"token class-name\">Rectangle</span> rect2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"perimeter of rect1 = \"</span> <span class=\"token operator\">+</span> rect1<span class=\"token punctuation\">.</span><span class=\"token function\">perimeter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"area of rect1 = \"</span> <span class=\"token operator\">+</span> rect1<span class=\"token punctuation\">.</span><span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"perimeter of rect2 = \"</span> <span class=\"token operator\">+</span> rect2<span class=\"token punctuation\">.</span><span class=\"token function\">perimeter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"area of rect2 = \"</span> <span class=\"token operator\">+</span> rect2<span class=\"token punctuation\">.</span><span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行TestRect.java得到结果</p>\n<h2 id=\"一些细节\"><a href=\"#一些细节\" class=\"headerlink\" title=\"一些细节\"></a>一些细节</h2><ul>\n<li>创建类时用public，就可以被包里的其他类访问</li>\n<li>注意数据类型<br><img src=\"https://cdn.jsdelivr.net/gh/strange-id/img@master/202303012047742.png\"><br>强行改成int型<br><img src=\"https://cdn.jsdelivr.net/gh/strange-id/img@master/202303012049131.png\"></li>\n<li>声明变量或状态值或类时用private，说明私密，其他类无法调用</li>\n<li>方法说明前面有个C，说明它是与类同名的构造方法<br><img src=\"https://cdn.jsdelivr.net/gh/strange-id/img@master/202303012048165.png\"></li>\n<li>edit-Find&#x2F;Replace：查找与替换</li>\n<li>Source-Format：自动把代码格式改得好看一点</li>\n</ul>\n","text":"面向对象的编程思想面向过程编程是数据结构和算法分开的，直接上手编算法解决问题。 面向对象编程是先把问题抽象成对象，对象中有它的特点（数据结构）和解决方法（算法），数据结构和算法杂糅在一起处理。 类、继承java中的Object类： 是最顶级的类，所有其他的类都是它直接或间接的子类...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"学习记录","slug":"学习记录","count":11,"path":"api/categories/学习记录.json"}],"tags":[{"name":"java","slug":"java","count":3,"path":"api/tags/java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3\"><span class=\"toc-text\">面向对象的编程思想</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E3%80%81%E7%BB%A7%E6%89%BF\"><span class=\"toc-text\">类、继承</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">小例子</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E7%B1%BB\"><span class=\"toc-text\">创建一个新的类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">程序示例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%90%8C%E7%B1%BB%E4%B8%AD%E8%B0%83%E7%94%A8%EF%BC%9F\"><span class=\"toc-text\">不同类中调用？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82\"><span class=\"toc-text\">一些细节</span></a></li></ol></li></ol>","author":{"name":"这id好怪","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/strange-id/img@master/202302261337546.png","link":"/","description":"记录学业、生活、爱好","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"OMORI 通关感想","uid":"0aeb1ac3ff6e8075ce1a8fc7873a2331","slug":"OMORI 通关感想","date":"2023-03-07T01:00:23.000Z","updated":"2023-04-07T08:35:48.000Z","comments":true,"path":"api/articles/OMORI 通关感想.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/strange-id/img@master/202304071550734.png","text":"一个有点意难平的友情故事 剧情主角SUNNY失手杀了自己姐姐后因为不敢告诉朋友们，四年闭门不出。朋友们也各自分开，开始新生活。在SUNNY搬家离开前最后三天，接受凯的邀请走出家门，了解四年后朋友们的现状，终于鼓起勇气面对现实，向朋友们坦白，开启新生活。 OMORI打怪的时候OMO...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"游戏相关","slug":"游戏相关","count":2,"path":"api/categories/游戏相关.json"}],"tags":[{"name":"通关感想","slug":"通关感想","count":2,"path":"api/tags/通关感想.json"}],"author":{"name":"这id好怪","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/strange-id/img@master/202302261337546.png","link":"/","description":"记录学业、生活、爱好","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"基于Cartpole-V1环境的PPO算法测试（二）","uid":"c9c4367659589c155ad018aba731abf7","slug":"基于Cartpole-V1环境的PPO算法测试（二）","date":"2023-03-01T08:36:13.000Z","updated":"2023-03-01T09:05:50.000Z","comments":true,"path":"api/articles/基于Cartpole-V1环境的PPO算法测试（二）.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/strange-id/img@master/202303011641323.png","text":"摘要昨天看到了倒立摆，今天用PPO训练了倒立摆，明天的目标是让训练结果可视化。 代码来源 该代码和我的环境不一样，所以有几个小问题。 代码环境（重要） 包 版本号 python 3.11 gym 0.26.2 numpy 1.23.5 keras 2.12.0rc1 tenson...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"学习记录","slug":"学习记录","count":11,"path":"api/categories/学习记录.json"}],"tags":[{"name":"强化学习","slug":"强化学习","count":2,"path":"api/tags/强化学习.json"},{"name":"PPO","slug":"PPO","count":2,"path":"api/tags/PPO.json"}],"author":{"name":"这id好怪","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/strange-id/img@master/202302261337546.png","link":"/","description":"记录学业、生活、爱好","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}